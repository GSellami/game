#include <stdio.h>
#include <stdlib.h>
#include <SDL/SDL.h>
#include <SDL/SDL_image.h>
#include <SDL/SDL_mixer.h>
#include <SDL/SDL_ttf.h>
#include <math.h>
#include <time.h>
#include <string.h>
#include "ennemi.h"

void initialiser_ennemi (ennemi entite[],int n) 

{
	char entites[20];
	int i ; 


  for ( i = 0; i < n; i++)
  {
  	entite[i].position_max_x=0;
  	entite[i].position_min_x=0;
  	entite[i].frameup=0;
  	entite[i].framedown=96;
  	entite[i].frameleft=48;
  	entite[i].frameright=144;
	entite[i].position_aleatoire_max_x=0;
	entite[i].position_aleatoire_max_y=0;
	entite[i].position_aleatoire_min_x=0;
	entite[i].position_aleatoire_min_y=0;
  	entite[i].position_min_y=0;
  	entite[i].position_max_y=0;
  	entite[i].position_entite.x=0 ; 
  	entite[i].position_entite.y=0 ; 
	entite[i].pos_affichage.x=0;
	entite[i].pos_affichage.y=0;
	entite[i].position_map.x=0;
	entite[i].position_map.y=0;
	entite[i].curframe=0;
	entite[i].maxframe=2;
	entite[i].choix=i;
	entite[i].frame.y=0;
	entite[i].frame.x=0;
	entite[i].frame.h=48;
	entite[i].frame.w=48;
	if (i==2)
	{
		entite[i].frameup=0;
  	entite[i].framedown=0;
  	entite[i].frameleft=0;
  	entite[i].frameright=0;
	entite[i].maxframe=6;
	entite[i].frame.h=60;
	entite[i].frame.w=60;	
	}
	if (i==3)
	{
entite[i].frame.x=48;
	entite[i].frame.h=48;
	entite[i].frame.w=48;
entite[i].frame.y=96;

	}
		if (i==4)
	{
entite[i].frame.x=48;
	entite[i].frame.h=48;
	entite[i].frame.w=48;
entite[i].frame.y=0;

	}
		if (i==5)
	{
entite[i].frame.x=0;
	entite[i].frame.h=134;
	entite[i].frame.w=150;
entite[i].frame.y=0;

	}
if (i==6)

{
entite[i].maxframe=59;


}
if (i==7)

{
entite[i].maxframe=59;


}
if (i==8)

{
entite[i].maxframe=59;


}

if (i==10)

{


entite[i].maxframe=59;

}

entite[i].affichage_ou_non=0;
	sprintf(entites,"entite/%d.png",i);

  	entite[i].affichage_secondaire=IMG_Load(entites); 
}
}


void afficher_ennemi (ennemi entite, SDL_Surface *ecran) 
{
	
	SDL_BlitSurface(entite.affichage_secondaire,&entite.frame,ecran,&entite.position_map);
	

} 







int deplacement_aleatoire ( int positionmax, int positionmin   )
{
     int pos;
  srand(time(NULL));
  
pos=rand()%(positionmax-positionmin+1)+positionmin;

      	  
   return pos;
       

 }
 
 
 void deplacement_ennemi_x (ennemi *entite)
{
	static int k=0;

    if (k==0) 
{
  entite->frame.y=entite->frameright;
         if (entite->position_entite.x<entite->position_aleatoire_max_x)
       {
      entite->position_entite.x++;
      }
      else
      {
         
         k=1;
      }

}

  if (k==1) 
{
 entite->frame.y=entite->frameleft;
     
         if (entite->position_entite.x>=entite->position_aleatoire_min_x)
       {
       entite->position_entite.x--;
      }
      else
      {
         
         k=0;
      }
     

}



}

 
